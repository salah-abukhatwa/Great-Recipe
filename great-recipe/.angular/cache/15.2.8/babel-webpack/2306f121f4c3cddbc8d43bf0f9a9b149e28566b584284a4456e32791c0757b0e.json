{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"src/app/shopping-list/shopping-list.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction RecipeEditComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵelement(2, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 21);\n    i0.ɵɵelement(4, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 23)(6, \"button\", 24);\n    i0.ɵɵtext(7, \"X\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n  }\n}\nexport let RecipeEditComponent = /*#__PURE__*/(() => {\n  class RecipeEditComponent {\n    constructor(route, recipeService, router, shoppingService) {\n      this.route = route;\n      this.recipeService = recipeService;\n      this.router = router;\n      this.shoppingService = shoppingService;\n      this.editMod = false;\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = +params['id'];\n        this.editMod = params['id'] != null;\n        this.initForm();\n      });\n    }\n    onSubmit() {\n      // const newRecipe = new Recipe(\n      //   this.recipeForm.value['name'],\n      //   this.recipeForm.value['imagePath'],\n      //   this.recipeForm.value['description'],\n      //   this.recipeForm.value['ingredients']\n      // )\n      if (this.editMod) {\n        this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n      } else {\n        this.recipeService.addRecipe(this.recipeForm.value);\n      }\n      this.onCancel();\n    }\n    initForm() {\n      let recipeName = '';\n      let recipeImagePath = '';\n      let recipeDescription = '';\n      let recipeIngrediants = new FormArray([]);\n      if (this.editMod) {\n        const recipe = this.recipeService.getRecipeById(this.id);\n        recipeName = recipe.name;\n        recipeImagePath = recipe.imagePath;\n        recipeDescription = recipe.description;\n        if (recipe['ingredients']) {\n          for (let ingredient of recipe.ingredients) {\n            recipeIngrediants.push(new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n            }));\n          }\n        }\n      }\n      this.recipeForm = new FormGroup({\n        'name': new FormControl(recipeName, Validators.required),\n        'imagePath': new FormControl(recipeImagePath, Validators.required),\n        'description': new FormControl(recipeDescription, Validators.required),\n        'ingredients': recipeIngrediants\n      });\n    }\n    onAddIngredient() {\n      this.recipeForm.get('ingredients').push(new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      }));\n    }\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n    onDeleteIng() {\n      this.shoppingService.deleteIngrediant(this.id);\n    }\n  }\n  RecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n    return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.ShoppingListService));\n  };\n  RecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeEditComponent,\n    selectors: [[\"app-recipe-edit\"]],\n    decls: 40,\n    vars: 4,\n    consts: [[1, \"row\"], [1, \"col-xs-12\", \"g-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-xs-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"me-2\", 3, \"disabled\"], [\"type\", \"\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"name\", 1, \"form-control\"], [\"for\", \"imageUrl\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"imagePath\", \"id\", \"imagePath\", 1, \"form-control\"], [\"imageRe\", \"\"], [1, \"img-thumbnail\", 3, \"src\"], [\"for\", \"description\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"description\", \"id\", \"description\", \"rows\", \"6\", 1, \"form-control\"], [\"formArrayName\", \"ingredients\", 1, \"col-auto\", \"g-4\"], [\"class\", \"row\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"row\", 3, \"formGroupName\"], [1, \"col-8\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"col-2\", 2, \"margin-top\", \"5px\"], [\"type\", \"number\", \"formControlName\", \"amount\", 1, \"form-control\"], [1, \"col-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"]],\n    template: function RecipeEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 3)(5, \"button\", 4);\n        i0.ɵɵtext(6, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_7_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(8, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 3)(11, \"div\", 6)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 3)(17, \"div\", 6)(18, \"label\", 9);\n        i0.ɵɵtext(19, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 10, 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 0)(23, \"div\", 3)(24, \"div\", 6);\n        i0.ɵɵelement(25, \"img\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 0)(27, \"div\", 3)(28, \"div\", 6)(29, \"label\", 13);\n        i0.ɵɵtext(30, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"textarea\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 0)(33, \"div\", 15);\n        i0.ɵɵtemplate(34, RecipeEditComponent_div_34_Template, 8, 1, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(35, \"hr\");\n        i0.ɵɵelementStart(36, \"div\", 0)(37, \"div\", 3)(38, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_38_listener() {\n          return ctx.onAddIngredient();\n        });\n        i0.ɵɵtext(39, \"Add Ingredient\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(21);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.recipeForm.valid);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"src\", _r0.value, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.recipeForm.get(\"ingredients\")[\"controls\"]);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i5.FormGroupName, i5.FormArrayName],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px red solid}\"]\n  });\n  return RecipeEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}